<?xml version="1.0"?>

<robot xmlns:xacro="http://www.ros.org/wiki/xacro">

  <xacro:macro name="ur3_gazebo" params="
    prefix
    use_fake_hardware:=false fake_sensor_commands:=false
    serial_number:=^|000000000000">

    <ros2_control name="BaseAxisControl" type="system">
      <hardware>
        <xacro:if value="${use_fake_hardware}">
          <plugin>odrive_hardware_interface/ODriveHardwareInterface</plugin>
        </xacro:if>
        <!-- <xacro:if value="${use_fake_hardware}">
          <plugin>fake_components/GenericSystem</plugin>
          <param name="fake_sensor_commands">${fake_sensor_commands}</param>
          <param name="state_following_offset">0.0</param>
        </xacro:if> -->
        <xacro:unless value="${use_fake_hardware}">
          <plugin>gazebo_ros2_control/GazeboSystem</plugin>
        </xacro:unless>
      </hardware>

      
      <sensor name="odrv0">
        <param name="serial_number">${serial_number}</param>
      </sensor>
      

      <joint name="${prefix}base_axis_joint">
        <param name="serial_number">${serial_number}</param>
        <param name="axis">0</param>
        <param name="enable_watchdog">0</param>
        <command_interface name="position">
          <param name="min">0</param>
          <param name="max">0.34</param>
        </command_interface>
        <command_interface name="velocity">
          <param name="min">-6</param>
          <param name="max">6</param>
        </command_interface>
        <state_interface name="position"/>
        <state_interface name="velocity"/>
      </joint>
    </ros2_control>

    <ros2_control name="GazeboSystem" type="system">

      <hardware>
        <xacro:if value="${use_fake_hardware}">
          <plugin>fake_components/GenericSystem</plugin>
        </xacro:if>
        <xacro:unless value="${use_fake_hardware}">
          <plugin>gazebo_ros2_control/GazeboSystem</plugin>
        </xacro:unless>
      </hardware>
      <!--
      <hardware>
        <xacro:if value="${use_fake_hardware}">
          <plugin>fake_components/GenericSystem</plugin>
          <param name="fake_sensor_commands">${fake_sensor_commands}</param>
          <param name="state_following_offset">0.0</param>
        </xacro:if>
        <xacro:unless value="${use_fake_hardware}">
          <plugin>ur_robot_driver/URPositionHardwareInterface</plugin>
          <param name="robot_ip">${robot_ip}</param>
          <param name="script_filename">${script_filename}</param>
          <param name="output_recipe_filename">${output_recipe_filename}</param>
          <param name="input_recipe_filename">${input_recipe_filename}</param>
          <param name="headless_mode">0</param>
          <param name="reverse_port">50001</param>
          <param name="script_sender_port">50002</param>
          <param name="tf_prefix">"${tf_prefix}"</param>
          <param name="non_blocking_read">0</param>
          <param name="servoj_gain">2000</param>
          <param name="servoj_lookahead_time">0.03</param>
          <param name="use_tool_communication">0</param>
          <param name="kinematics/hash">${hash_kinematics}</param>
          <param name="tool_voltage">0</param>
          <param name="tool_parity">0</param>
          <param name="tool_baud_rate">115200</param>
          <param name="tool_stop_bits">1</param>
          <param name="tool_rx_idle_chars">1.5</param>
          <param name="tool_tx_idle_chars">3.5</param>
          <param name="tool_device_name">/tmp/ttyUR</param>
          <param name="tool_tcp_port">54321</param>
        </xacro:unless>
      </hardware> -->

      <joint name="${prefix}shoulder_pan_joint">
        <command_interface name="position">
          <param name="min">${-2*pi}</param>
          <param name="max">${2*pi}</param>
        </command_interface>
        <command_interface name="velocity">
          <param name="min">-3.15</param>
          <param name="max">3.15</param>
        </command_interface>
        <state_interface name="position"/>
        <state_interface name="velocity"/>
        <state_interface name="effort"/>
        <!-- <param name="initial_position">${initial_positions['shoulder_pan_joint']}</param>   initial position for the FakeSystem -->
      </joint>
      <joint name="${prefix}shoulder_lift_joint">
        <command_interface name="position">
          <param name="min">${-2*pi}</param>
          <param name="max">${2*pi}</param>
        </command_interface>
        <command_interface name="velocity">
          <param name="min">-3.15</param>
          <param name="max">3.15</param>
        </command_interface>
        <state_interface name="position"/>
        <state_interface name="velocity"/>
        <state_interface name="effort"/>
        <!-- <param name="initial_position">${initial_positions['shoulder_lift_joint']}</param>   initial position for the FakeSystem -->
      </joint>
      <joint name="${prefix}elbow_joint">
        <command_interface name="position">
          <param name="min">${-pi}</param>
          <param name="max">${pi}</param>
        </command_interface>
        <command_interface name="velocity">
          <param name="min">-3.15</param>
          <param name="max">3.15</param>
        </command_interface>
        <state_interface name="position"/>
        <state_interface name="velocity"/>
        <state_interface name="effort"/>
        <!-- <param name="initial_position">${initial_positions['elbow_joint']}</param>   initial position for the FakeSystem -->
      </joint>
      <joint name="${prefix}wrist_1_joint">
        <command_interface name="position">
          <param name="min">${-2*pi}</param>
          <param name="max">${2*pi}</param>
        </command_interface>
        <command_interface name="velocity">
          <param name="min">-6.28</param>
          <param name="max">6.28</param>
        </command_interface>
        <state_interface name="position"/>
        <state_interface name="velocity"/>
        <state_interface name="effort"/>
        <!-- <param name="initial_position">${initial_positions['wrist_1_joint']}</param>   initial position for the FakeSystem -->
      </joint>
      <joint name="${prefix}wrist_2_joint">
        <command_interface name="position">
          <param name="min">${-2*pi}</param>
          <param name="max">${2*pi}</param>
        </command_interface>
        <command_interface name="velocity">
          <param name="min">-6.28</param>
          <param name="max">6.28</param>
        </command_interface>
        <state_interface name="position"/>
        <state_interface name="velocity"/>
        <state_interface name="effort"/>
        <!-- <param name="initial_position">${initial_positions['wrist_2_joint']}</param>   initial position for the FakeSystem -->
      </joint>
      <joint name="${prefix}wrist_3_joint">
        <command_interface name="position">
          <param name="min">${-2*pi}</param>
          <param name="max">${2*pi}</param>
        </command_interface>
        <command_interface name="velocity">
          <param name="min">-6.28</param>
          <param name="max">6.28</param>
        </command_interface>
        <state_interface name="position"/>
        <state_interface name="velocity"/>
        <state_interface name="effort"/>
        <!-- <param name="initial_position">${initial_positions['wrist_3_joint']}</param>   initial position for the FakeSystem -->
      </joint>
      <!-- <joint name="${prefix}base_axis_joint">
        <command_interface name="position">
          <param name="min">0</param>
          <param name="max">0.34</param>
        </command_interface>
        <command_interface name="velocity">
          <param name="min">-6</param>
          <param name="max">6</param>
        </command_interface>
        <state_interface name="position"/>
        <state_interface name="velocity"/>
        <state_interface name="effort"/>
      </joint> -->
      <!--
      <sensor name="tcp_fts_sensor">
        <state_interface name="force.x"/>
        <state_interface name="force.y"/>
        <state_interface name="force.z"/>
        <state_interface name="torque.x"/>
        <state_interface name="torque.y"/>
        <state_interface name="torque.z"/>
      </sensor> -->

    </ros2_control>

    <gazebo reference="${prefix}shoulder_link">
      <selfCollide>false</selfCollide>
    </gazebo>
    <gazebo reference="${prefix}upper_arm_link">
      <selfCollide>false</selfCollide>
    </gazebo>
    <gazebo reference="${prefix}forearm_link">
      <selfCollide>false</selfCollide>
    </gazebo>
    <gazebo reference="${prefix}wrist_1_link">
      <selfCollide>false</selfCollide>
    </gazebo>
    <gazebo reference="${prefix}wrist_3_link">
      <selfCollide>false</selfCollide>
    </gazebo>
    <gazebo reference="${prefix}wrist_2_link">
      <selfCollide>false</selfCollide>
    </gazebo>
    <gazebo reference="${prefix}ee_link">
      <selfCollide>false</selfCollide>
    </gazebo>
    <gazebo reference="${prefix}base_axis_joint">
      <selfCollide>false</selfCollide>
    </gazebo>

  </xacro:macro>

</robot>